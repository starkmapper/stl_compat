cmake_minimum_required(VERSION 3.0.0)

set(nuget_dest ${CMAKE_BINARY_DIR}/nuget.exe)
function(download_nuget)
  message(STATUS "downloading nuget")
  file(DOWNLOAD https://dist.nuget.org/win-x86-commandline/latest/nuget.exe ${CMAKE_BINARY_DIR}/nuget.exe)
endfunction(download_nuget)

function(install_nuget_package package_name)
  find_program(nuget_program NAMES nuget)
  if(${nuget_program} STREQUAL "nuget_program-NOTFOUND")
    download_nuget()
    find_program(nuget_program NAMES nuget)
  endif()
  execute_process(COMMAND ${nuget_program} install ${package_name} -OutputDirectory ${CMAKE_BINARY_DIR}/packages -ExcludeVersion)
 endfunction(install_nuget_package)

  if (BORLAND)
    include(Borland.cmake)
  endif()
  add_library(boost_tr1 INTERFACE)
  add_library(boost INTERFACE)
  if(MSVC AND NOT BOOST_ROOT)
    set(BOOST_PACKAGE_PATH ${CMAKE_BINARY_DIR}/packages/boost/lib/native/include)
    if(EXISTS ${BOOST_PACKAGE_PATH})
      MESSAGE(STATUS "NuGet Boost package found")
    else()
      install_nuget_package(boost)
    endif()
    
    set(BOOST_ROOT ${BOOST_PACKAGE_PATH})
  endif()
  
if(BOOST_ROOT)
  message(STATUS "Using boost directory: ${BOOST_ROOT}")
  
  if (BORLAND)
    target_compile_options(boost INTERFACE "-I\"${BOOST_ROOT}\"")
  else()
    target_include_directories(boost SYSTEM INTERFACE "${BOOST_ROOT}")
  endif()
  target_compile_definitions(boost INTERFACE BOOST_USE_WINDOWS_H INTERFACE BOOST_THREAD_USE_LIB)
  
  target_link_libraries(boost_tr1 INTERFACE boost)
  
  if (BORLAND)
    target_compile_options(boost_tr1 INTERFACE "-I\"${BOOST_ROOT}/boost/tr1/tr1\"")
  else()
    target_include_directories(boost_tr1 SYSTEM INTERFACE "${BOOST_ROOT}/boost/tr1/tr1")
  endif()
else()
  message(WARNING "No boost configured, only native features supported")
endif()